{"version":3,"sources":["StreamlitPlotlyEventsComponent.tsx","index.tsx"],"names":["StreamlitPlotlyEventsComponent","StreamlitComponentBase","constructor","arguments","render","plot_obj","JSON","parse","this","props","args","override_height","override_width","click_event","select_event","hover_event","with_z","Streamlit","setFrameHeight","React","createElement","Plot","data","layout","config","frames","onClick","plotlyEventHandler","undefined","onSelected","onHover","style","width","height","className","clickedPoints","points","forEach","arrayItem","push","x","y","z","curveNumber","pointNumber","pointIndex","setComponentValue","stringify","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"+MAQA,MAAMA,UAAuCC,IAAuBC,cAAA,SAAAC,WAAA,KAC3DC,OAAS,KAEd,MAAMC,EAAWC,KAAKC,MAAMC,KAAKC,MAAMC,KAAe,UAChDC,EAAkBH,KAAKC,MAAMC,KAAsB,gBACnDE,EAAiBJ,KAAKC,MAAMC,KAAqB,eAGjDG,EAAcL,KAAKC,MAAMC,KAAkB,YAC3CI,EAAeN,KAAKC,MAAMC,KAAmB,aAC7CK,EAAcP,KAAKC,MAAMC,KAAkB,YAC3CM,EAASR,KAAKC,MAAMC,KAAa,OAGvC,OADAO,IAAUC,eAAeP,GAEvBQ,IAAAC,cAACC,IAAI,CACHC,KAAMjB,EAASiB,KACfC,OAAQlB,EAASkB,OACjBC,OAAQnB,EAASmB,OACjBC,OAAQpB,EAASoB,OACjBC,QAASb,EAAcL,KAAKmB,mBAAmBX,QAAUY,EACzDC,WAAYf,EAAeN,KAAKmB,mBAAmBX,QAAUY,EAC7DE,QAASf,EAAcP,KAAKmB,mBAAmBX,QAAUY,EACzDG,MAAO,CAAEC,MAAOpB,EAAgBqB,OAAQtB,GACxCuB,UAAU,mBAKc,KACtBP,mBAAsBX,GACpBM,IAEN,IAAIa,EAA4B,GAChCb,EAAKc,OAAOC,SAAQ,SAAUC,GACxBtB,EACFmB,EAAcI,KAAK,CACjBC,EAAGF,EAAUE,EACbC,EAAGH,EAAUG,EACbC,EAAGJ,EAAUI,EACbC,YAAaL,EAAUK,YACvBC,YAAaN,EAAUM,YACvBC,WAAYP,EAAUO,aAGxBV,EAAcI,KAAK,CACjBC,EAAGF,EAAUE,EACbC,EAAGH,EAAUG,EACbE,YAAaL,EAAUK,YACvBC,YAAaN,EAAUM,YACvBC,WAAYP,EAAUO,gBAM5B5B,IAAU6B,kBAAkBxC,KAAKyC,UAAUZ,MAKlCa,kBAAwBhD,GCjEvCiD,IAAS7C,OACPe,IAAAC,cAACD,IAAM+B,WAAU,KACf/B,IAAAC,cAACpB,EAA8B,OAEjCmD,SAASC,eAAe,U","file":"static/js/main.5c18dd88.chunk.js","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\";\nimport React, { ReactNode } from \"react\";\nimport Plot from 'react-plotly.js';\n\nclass StreamlitPlotlyEventsComponent extends StreamlitComponentBase {\n  public render = (): ReactNode => {\n    // Pull Plotly object from args and parse\n    const plot_obj = JSON.parse(this.props.args[\"plot_obj\"]);\n    const override_height = this.props.args[\"override_height\"];\n    const override_width = this.props.args[\"override_width\"];\n\n    // Event booleans\n    const click_event = this.props.args[\"click_event\"];\n    const select_event = this.props.args[\"select_event\"];\n    const hover_event = this.props.args[\"hover_event\"];\n    const with_z = this.props.args[\"with_z\"];\n\n    Streamlit.setFrameHeight(override_height);\n    return (\n      <Plot\n        data={plot_obj.data}\n        layout={plot_obj.layout}\n        config={plot_obj.config}\n        frames={plot_obj.frames}\n        onClick={click_event ? this.plotlyEventHandler(with_z) : undefined}\n        onSelected={select_event ? this.plotlyEventHandler(with_z) : undefined}\n        onHover={hover_event ? this.plotlyEventHandler(with_z) : undefined}\n        style={{ width: override_width, height: override_height }}\n        className=\"stPlotlyChart\"\n      />\n    );\n  };\n\n  /** Click handler for plot. */\n  private plotlyEventHandler = (with_z: boolean) => {\n    return (data: any) => {\n      // Build array of points to return\n      var clickedPoints: Array<any> = [];\n      data.points.forEach(function (arrayItem: any) {\n        if (with_z) {\n          clickedPoints.push({\n            x: arrayItem.x,\n            y: arrayItem.y,\n            z: arrayItem.z,\n            curveNumber: arrayItem.curveNumber,\n            pointNumber: arrayItem.pointNumber,\n            pointIndex: arrayItem.pointIndex\n          });\n        } else {\n          clickedPoints.push({\n            x: arrayItem.x,\n            y: arrayItem.y,\n            curveNumber: arrayItem.curveNumber,\n            pointNumber: arrayItem.pointNumber,\n            pointIndex: arrayItem.pointIndex\n          });\n        }\n      });\n\n      // Return array as JSON to Streamlit\n      Streamlit.setComponentValue(JSON.stringify(clickedPoints));\n    };\n  };\n}\n\nexport default withStreamlitConnection(StreamlitPlotlyEventsComponent);\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport StreamlitPlotlyEventsComponent from \"./StreamlitPlotlyEventsComponent\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <StreamlitPlotlyEventsComponent />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}